apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
  {{- if .Values.commonAnnotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ pluck $.Values.global.env .Values.replicaCount | first | default .Values.replicaCount._default }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- if .Values.secrets.enabled }}
      {{- include "common.secrets.annotations" . | indent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.secrets.enabled }}
      serviceAccountName: {{ .Values.secrets.sa }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity.enabled }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        {{- if .Values.nodeAffinity.enabled }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork | default false }}
      {{- end }}
      containers:
        - name: {{ include "common.names.fullname" . }}
          image: {{ include "dotnet-app.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.application.env }}
          {{- if .Values.global.env }}
          {{- range $key, $map := .Values.application.env }}
            {{- if $map._default }}
            - name: {{ $key }}
              value: {{ pluck $.Values.global.env $map | first | default $map._default | quote }}
            {{- else if pluck $.Values.global.env $map }}
            - name: {{ $key }}
              value: {{ pluck $.Values.global.env $map | first | quote }}
            {{- end }}
          {{- end -}}
          {{- else }}
          {{- range $key, $value := .Values.application.env }}
            - name: {{ $key }}
              value: {{ $value }}
          {{- end -}}
          {{- end -}}
          {{- end }}
          {{- if .Values.secrets.enabled }}
          {{- include "common.secrets.secretEnv" $ | indent 12 }}
          {{- end }}
          {{- if .Values.application.cm }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.fullname" . }}
            {{- if .Values.application.secret }}
            {{- include "common.env.envSecretVars" . | indent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.workingDir }}
          workingDir: {{- include "common.tplvalues.render" (dict "value" .Values.workingDir "context" $) }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
            {{- if .Values.monitor.enabled }}
            - name: metrics
              containerPort: {{ .Values.monitor.port | default "8081" }}
            {{- end }}
            {{- if .Values.service.extraPorts }}
            {{- range $port := .Values.service.extraPorts }}
            - containerPort: {{ $port.port }}
              name: {{ $port.name }}
              protocol: {{ $port.protocol }}
            {{- end }}
            {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit (omit .Values.startupProbe "enabled") "path") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
          {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            limits:
              cpu: {{ pluck $.Values.global.env .Values.resources.limits.cpu | first | default .Values.resources.limits.cpu._default | quote }}
              memory: {{ pluck $.Values.global.env .Values.resources.limits.memory | first | default .Values.resources.limits.memory._default | quote }}
            requests:
              cpu: {{ pluck $.Values.global.env .Values.resources.requests.cpu | first | default .Values.resources.requests.cpu._default | quote }}
              memory: {{ pluck $.Values.global.env .Values.resources.requests.memory | first | default .Values.resources.requests.memory._default | quote }}
          {{- end }}
          {{- if or .Values.volumes.enabled .Values.extsecret.enabled }}
          volumeMounts:
          {{- if .Values.volumes.enabled }}
          {{- include "common.volumes.volumeMounts" . | indent 10 }}
          {{- end }}
          {{- if .Values.extsecret.enabled }}
          {{- include "common.volumes.secretMounts" . | indent 10 }}
          {{- end }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      {{- if or .Values.volumes.enabled .Values.extsecret.enabled .Values.extraVolumes }}
      volumes:
      {{- if .Values.volumes.enabled }}
      {{- include "common.volumes.volumes" . | indent 8 }}
      {{- end }}
      {{- if .Values.extsecret.enabled }}
      {{- include "common.volumes.secrets" . | indent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 10 }}
      {{- end }}
      {{- end }}
