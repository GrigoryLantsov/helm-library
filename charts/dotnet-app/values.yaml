global:
  imagePullSecrets:

monitor:
  enabled: true
  port: 8081

diagnosticMode:
  enabled: false

job:
  enabled: true
  restartPolicy: Never
  # workingDir: /app/migrate
  command: ["dotnet","Ins.Migrator.dll"]
  diagnosticMode:
    enabled: false
  startupProbe:
    enabled: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

livenessProbe:
  enabled: false
readinessProbe:
  enabled: false
startupProbe:
  enabled: False

image:
  repository: nginxinc/nginx-unprivileged
  tag: latest
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false

containerPorts:
  http: 3000

podAnnotations:

autoscaling:
  enabled: false


##### BANZAI
secrets:
  enabled: false
  # rolename: #vault role
  # sa: #sa
  # path:
  # - name: ""
  #   path:
  #     _default: ""
  #   key: "y"
  # - name: ""
  #   path:
  #     dev: ""
  #   key: ""
  # - name: ""
  #   path:
  #     dev: ""
  #     uat: "t"
  #   key: ""
  # - name: "ConnectionStrings__Default"
  #   path:
  #     dev: ""
  #     uat: "
  #   key: "ConnectionStrings__Default"

#### yandex cloud
extsecret:
  enabled: false
  single:
    enabled: false
  multiple:
    enabled: true
  # list:
  #   - name: foo
  #     key:
  #       _default: foo
  #     path: ulyu
  #   - name: foo
  #     key:
  #       _default: baR
  #       dev: oooopa
  #       uat: zhopa
  #     path: baR


replicaCount:
  _default: 1

volumes:
  enabled: true
  path: /app/zhopa.json
  subpath: zhopa.json

affinity:
  enabled: true
podAntiAffinityPreset: hard
nodeAffinity:
  enabled: false

hostNetwork: false

podSecurityContext:
  enabled: true
  fsGroup: 101
  runAsUser: 101
  runAsGroup: 101
  # privileged: false

containerSecurityContext:
  enabled: true
  capabilities:
    drop: ["ALL"]
    add: ["SYS_NICE", "NET_BIND_SERVICE"]
    # add: ["CAP_CHOWN", "CAP_NET_BIND_SERVICE", "CAP_SETGID", "CAP_SETUID"]
  allowPrivilegeEscalation: false
  privileged: false

service:
  type: ClusterIP
  ports:
    http: 8080
  nodePorts:
    http: {}

ingress:
  nginx:
    enabled: false
  traefik:
    enabled: false
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   nginx.ingress.kubernetes.io/proxy-body-size: "200m"
  #   nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  #   nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  # hosts:
  #   - host:
  #       _default: dev.example.com
  #       dev: dev.example.com
  #       test: test.example.com
  #     paths:
  #       - path: "/"
  #         pathType: Prefix
  #   - host:
  #       _default: dev.example.com
  #       dev: dev.example.com
  #       test: test.example.com
  #     paths:
  #       - path: "/api/"
  #         pathType: Prefix

serviceAccount:
  create: false

persistence:
  enabled: false

application:
  env:
    # foo:
    #   _default: "bar"
    #   dev: "barr"
    #   test: DOM
