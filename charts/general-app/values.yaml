global:
  autoreloader: false

monitor:
  enabled: false
  port: 8081

diagnosticMode:
  enabled: false

annotations:
  logKibana:
    enabled: false

probe:
  enabled: true

livenessProbe:
  enabled: false
readinessProbe:
  enabled: false
startupProbe:
  enabled: False

job:
  enabled: false
  # restartPolicy: Never
  # image: test:test
  # workingDir: /app/migrate
  # command: ["dotnet","Ins.Migrator.dll"]
  diagnosticMode:
    enabled: false
  startupProbe:
    enabled: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  backoffLimit: 3

image:
  repository: nginxinc/nginx-unprivileged
  tag: "latest"
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false

podAnnotations:

autoscaling:
  enabled: false

replicaCount:
  _default: 1

topSprConstr:
  enabled: false

secrets:
  refresh: false
  enabled: false
  # rolename: test
  # path:
  # - name: "foo"
  #   path:
  #     _default: "bar/data/db"
  #   key: "F00bAr"
  file:
    enabled: false
  #   path:
  #     - name: secret1
  #       version: '33'
  #       decode: false
  #       path:
  #         _default: "dat/data/dfb/dafs"
  #         dev: "asd/data/jadfha"
  #       key:
  #         _default: DB_USER
  #         dev: DB_USERNAME
  #         test: DB_PASSWORD
  #       mountPath: /path/on/docker
  #       subPath: masks.key
  #     - name: secret20
  #       decode: true
  #       path:
  #         _default: "sma/data/sma-adapter2-agent-consumer"
  #         dev: "asd/data/jadfha"
  #       key:
  #         _default: MASKS_KEY
  #         dev: DB_USERNAME
  #         test: DB_PASSWORD
  #       mountPath: /path/on/docker
  #       subPath: masks.key

affinity:
  enabled: true
podAntiAffinityPreset: hard
nodeAffinity:
  enabled: false

# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: "topology.kubernetes.io/zone"
#     whenUnsatisfiable: "DoNotSchedule"
#     labelSelector:
#       matchLabels:
#         app.kubernetes.io/name: node-app

hostNetwork: false

podSecurityContext:
  enabled: false
  fsGroup: 101
  runAsUser: 101
  runAsGroup: 101
  # privileged: false

containerSecurityContext:
  enabled: false
  capabilities:
    drop: ["ALL"]
    add: ["SYS_NICE", "NET_BIND_SERVICE"]
    # add: ["CAP_CHOWN", "CAP_NET_BIND_SERVICE", "CAP_SETGID", "CAP_SETUID"]
  allowPrivilegeEscalation: false
  privileged: false

res:
  map:
    enabled: false
  abs:
    enabled: true

emptyDir:
  enabled: false
  # sizeLimit: 500Mi
  # path: /var/run

service:
  type: ClusterIP
  ports:
    http: 8080

ingress:
  nginx:
    enabled: false
  traefik:
    enabled: false
    middleware:
      enabled: false
      # rules:
      #   stripPrefix:
      #     prefixes:
      #       - /foobar
      #       - /fiibar
    rewrite:
      enabled: false
      # target:
      # source:
      # target: "^/api/lk-agent/(.*)"
      # source: "/lk-agent/api/v1/$1"
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   nginx.ingress.kubernetes.io/proxy-body-size: "200m"
  #   nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  #   nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  # hosts:
  #   - host:
  #       _default: dev.example.ru
  #       dev: dev.example.ru
  #       test: test.example.ru
  #     paths:
  #       - path: "/"
  #         pathType: Prefix
  #         port:
  #           number: 801
  #   - host:
  #       _default: dev.example.ru
  #       dev: dev.example.ru
  #       test: test.example.ru
  #     paths:
  #       - path: "/api/"
  #         pathType: Prefix

serviceAccount:
  exists:
    enabled: false
  manual:
    enabled: false
  create: false

persistence:
  enabled: false

application:
  env:
    # foo:
    #   _default: "bar"
    #   dev: "barr"
    #   test: DOM

volumes:
  enabled: false

configMap:
  enabled: false
  files:
    # - name: config.json
    #   mountPath: /opt/node-app/
    #   data: |
    #     {
    #       key: 'SOME DATA JSON'
    #     }
    # - name: config2.json
    #   mountPath: /opt/node-app/
    #   data: |
    #     {
    #       key: 'SOME DATA JSON2'
    #     }
