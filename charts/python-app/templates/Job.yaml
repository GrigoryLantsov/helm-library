{{- if .Values.job.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: {{ include "common.names.fullname" . }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
      {{- if .Values.secrets.enabled }}
      {{- include "common.secrets.annotations" . | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.secrets.enabled }}
      serviceAccountName: {{ .Values.secrets.sa }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.job.restartPolicy }}
      {{- if .Values.pythonSelector }}
      pythonSelector: {{- include "common.tplvalues.render" (dict "value" .Values.pythonSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.emptyDir.enabled }}
        - name: empty
          {{- if .Values.emptyDir.sizeLimit }}
          emptyDir:
            sizeLimit: {{ .Values.emptyDir.sizeLimit }}
          {{- else }}
          emptyDir: { }
          {{- end }}
      {{- end }}
      {{- if .Values.configMap.enabled }}
      {{- range .Values.configMap.files }}
        - name: {{ .name | replace "." "-" }}
          configMap:
            name: {{ include "common.names.fullname" $ }}
      {{- end }}
      {{- end }}
      {{- if .Values.extsecret.enabled }}
      {{- include "common.volumes.secrets" . | indent 6 }}
      {{- end }}
      {{- if .Values.secrets.file.enabled }}
      {{- include "common.secrets.file.volume" $ | indent 6 }}
      {{- end }}
      containers:
        - name: {{ include "common.names.fullname" . }}
          {{- if .Values.job.image }}
          image: {{ .Values.job.image }}
          {{- else }}
          image: {{ include "python.image" . }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.application.env }}
            {{- include "common.env.envs" . | indent 8 }}
          {{- end }}
          {{- if .Values.application.secret }}
            {{- include "common.env.secretRef" . | indent 8 }}
          {{- end }}
          {{- if .Values.secrets.enabled }}
          {{- include "common.secrets.secretEnv" $ | indent 10 }}
          {{- end }}
          {{- if .Values.application.cm }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.fullname" . }}
            {{- if .Values.application.secret }}
            {{- include "common.env.envSecretVars" . | indent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.workingDir }}
          workingDir: {{- include "common.tplvalues.render" (dict "value" .Values.job.workingDir "context" $) }}
          {{- end }}
          {{- if .Values.job.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.job.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.job.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.job.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.job.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.job.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.job.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.job.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.job.livenessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.job.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.job.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.job.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.job.readinessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.job.customStartupProbe}}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.job.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.job.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit (omit .Values.job.startupProbe "enabled") "path") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.job.startupProbe.path }}
              port: http
          {{- end }}
          {{- end }}
          volumeMounts:
          {{- if .Values.emptyDir.enabled }}
            - name: empty
              mountPath: {{ .Values.emptyDir.path }}
          {{- end }}
          {{- if .Values.configMap.enabled }}
          {{- range .Values.configMap.files }}
            - name: {{ .name | replace "." "-" }}
              mountPath: {{ .mountPath }}
              subPath: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if .Values.extsecret.enabled }}
          {{- include "common.volumes.secretMounts" . | indent 10 }}
          {{- end }}
          {{- if .Values.secrets.file.enabled }}
          {{- include "common.secrets.file.volumeMounts" $ | indent 12 }}
          {{- end }}
{{- end -}}
